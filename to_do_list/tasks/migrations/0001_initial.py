# Generated by Django 5.1.5 on 2025-01-26 11:07

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import tasks.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Придумайте уникальный юзернейм для пользователя', max_length=64, unique=True, validators=[tasks.validators.username_validator], verbose_name='Юзернейм')),
                ('email', models.EmailField(help_text='Введите уникальный адрес электронной почты', max_length=128, unique=True, verbose_name='Адрес электронной почты')),
                ('first_name', models.CharField(help_text='Введите ваше имя', max_length=64, verbose_name='Имя')),
                ('last_name', models.CharField(help_text='Введите ваше имя', max_length=64, verbose_name='Имя')),
                ('bio', models.TextField(help_text='Введите биографию', null=True, verbose_name='Биография')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['username', 'last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название задачи', max_length=128, unique=True, verbose_name='Название задачи')),
                ('text', models.TextField(blank=True, help_text='Определите цель вашей задачи', null=True, verbose_name='Цель задания')),
                ('done_status', models.BooleanField(blank=True, verbose_name='Статус задачи')),
                ('overdue_status', models.BooleanField(blank=True, verbose_name='Просрочено')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Время создания задачи')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Срок сдачи задачи')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['start_date', 'name'],
                'default_related_name': 'tasks',
            },
        ),
    ]
